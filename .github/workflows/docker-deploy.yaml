name: Docker - Deploy

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      service_path:
        type: string
        default: '.'
        description: Path of application if a monorepo is in use (used for infrastructure)
        required: false
      service:
        type: string
        required: false
        description: Name of the service in Kubernetes (i.e sso)
      namespace:
        type: string
        required: true
        description: Namespace of the service
      shared_context:
        type: boolean
        required: false
        default: false
        description: Set to true if dockerfile needs repo wide context
    secrets:
      AWS_ACCESS_KEY_DEVELOPMENT:
        required: true
      AWS_SECRET_ACCESS_KEY_DEVELOPMENT:
        required: true      

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure ECR AWS credentials (dev)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_DEVELOPMENT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOPMENT }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ inputs.service }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ inputs.service }}-buildx-

      - name: Generate env vars
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "GIT_REF=`echo ${GITHUB_REF##*/}`" >> $GITHUB_ENV
          echo "DATE=`echo $(date +'%Y-%m-%d')`" >> $GITHUB_ENV
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=${{ inputs.namespace }}/${{ inputs.service }}" >> $GITHUB_ENV
      
      - name: Shared Context Build and push
        if: ${{ inputs.shared_context }}
        id: shared_context_docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./${{ inputs.service_path }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.GIT_REF }}-${{ env.DATE }}-${{ env.SHORT_SHA }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Build and push
        if: ${{ ! inputs.shared_context }}
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./${{ inputs.service_path }}
          file: ./${{ inputs.service_path }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.GIT_REF }}-${{ env.DATE }}-${{ env.SHORT_SHA }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Kubernetes resource setup
        env:
          ECR_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.namespace }}/${{ inputs.service }}:${{ env.GIT_REF }}-${{ env.DATE }}-${{ env.SHORT_SHA }}
        run: |
          git checkout main
          git pull origin main
          cd ${{ inputs.service_path }}/infrastructure/kubernetes/${{ inputs.environment }}
          sed -i "s|image:.*|image: $ECR_IMAGE|" ${{ inputs.service }}.yaml

      - name: Commit and Push
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ inputs.service_path }}/infrastructure/kubernetes/${{ inputs.environment }}/${{ inputs.service }}.yaml
          git commit -a -m "Bump image tag (run number: ${GITHUB_RUN_NUMBER})"
          git push origin main
